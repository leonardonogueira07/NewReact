{"version":3,"sources":["Modal.js","index.js"],"names":["Modal","useState","users","setUsers","showList","showModal","setShowModal","showModal2","setShowModal2","userModal","setUserModal","cardUser","setcardUser","inputValue","setInputValue","setvalidModal2","cards","card_number","cvv","expiry_date","useEffect","axios","get","then","res","data","map","user","style","display","className","src","img","alt","name","id","username","onClick","obj","onSubmit","evt","preventDefault","body","destination_user_id","value","console","log","JSON","stringify","fetch","method","response","json","paymentReceiptResponse","success","type","pattern","placeholder","required","onChange","e","target","i","substr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f5b4294.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './assets/css/App.css';\r\nimport CurrencyInput from 'react-currency-masked-input';\r\n\r\nfunction Modal() {\r\n    const [users, setUsers] = useState([]) //Listagem de usuarios\r\n    const [showList, setShowList] = useState(\"block\") //Mostra a lista\r\n    const [showModal, setShowModal] = useState(\"none\")  //Mostra Primeiro Modal\r\n    const [showModal2, setShowModal2] = useState(\"none\") //Carrega informações do modal2  \r\n    const [userModal, setUserModal] = useState({}) //Carregando usuario no modal\r\n    const [cardUser, setcardUser] = useState(\"\") //Cartão\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [validModal2, setvalidModal2] = useState()\r\n\r\n    let cards = [\r\n        // valid card\r\n        {\r\n          card_number: '1111111111111111',\r\n          cvv: 789,\r\n          expiry_date: '01/18',\r\n        },\r\n        // invalid card\r\n        {\r\n          card_number: '4111111111111234',\r\n          cvv: 123,\r\n          expiry_date: '01/20',\r\n        },\r\n      ];\r\n    \r\n    useEffect(() => {\r\n        axios.get(`https://www.mocky.io/v2/5d531c4f2e0000620081ddce`)\r\n        .then(res => {\r\n        const users = res.data;\r\n        setUsers( users );\r\n      })\r\n    },[])\r\n    \r\n    const iteracao = (obj) => {\r\n        setShowModal(\"block\")\r\n        setUserModal(obj)  \r\n        \r\n    }\r\n    const submeter = (evt) => {\r\n        evt.preventDefault()\r\n        setShowModal(\"none\")\r\n        setShowModal2(\"flex\")\r\n        let body = {\r\n            // Card Info\r\n            card_number: cards[cardUser].card_number,\r\n            cvv: cards[cardUser].cvv,\r\n            expiry_date: cards[cardUser].expiry_date,\r\n\r\n            // Destination User ID\r\n            destination_user_id: userModal.id,\r\n\r\n            // Value of the Transaction\r\n            value: inputValue\r\n        };console.log(body)\r\n\r\n        body = JSON.stringify( body );\r\n        // send payment post\r\n        fetch('https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989', {\r\n            method: 'POST',\r\n            body: body\r\n        })\r\n        .then(response => response.json())\r\n        .then((paymentReceiptResponse) => {\r\n            // send received json to parent component\r\n            console.log(paymentReceiptResponse)\r\n            console.log(cardUser)\r\n            if(cards[cardUser] == \"1111111111111111\") {\r\n                setShowModal2(\"block\")\r\n                setvalidModal2(false)\r\n            } else {\r\n                setShowModal2(\"block\")\r\n                setvalidModal2(paymentReceiptResponse.success)\r\n            }\r\n        })\r\n    }\r\n    \r\n    \r\n\r\n   \r\n    return <>  \r\n        { users.map(user => \r\n            <div style={{display:showList}}>\r\n                <div className=\"container\">\r\n                <img src={user.img} alt=\"Perfil\"/>\r\n                <div className=\"data\" >\r\n                    <p>{user.name}</p>\r\n                    <p>ID: {user.id} - Nome de Usuário: {user.username}</p>\r\n                </div>\r\n                <div className=\"container-btn\">\r\n                  <button className=\"btn\" onClick={() => { iteracao( user ) }} >Pagar</button>\r\n                </div>\r\n            </div>   \r\n            </div>\r\n        )}\r\n        \r\n        <div className=\"overlay\" style={{display:showModal}}>\r\n            <div className=\"container-payment\">\r\n                <div className=\"items-payment\">\r\n                    <h1 className=\"title-payment\">Forma de Pagamento</h1>\r\n                    <div className=\"sub-title-payment\">\r\n                        <div className=\"sub-title-payment1\">\r\n                            Pagamento Para:\r\n                        </div>\r\n                        <div className=\"sub-title-playment2\">\r\n                            {userModal.name}\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"form-payment\" onSubmit={submeter }>\r\n                        <CurrencyInput name=\"myInput\" className=\"input-form-payment\" type=\"number\" pattern=\"\\d*\" placeholder=\"R$0,00\" required value={inputValue} onChange={e => setInputValue(e.target.value)}/>\r\n                        <select className=\"select-form-payment\" required value={cardUser} onChange={e => setcardUser(e.target.value)}>\r\n                            <option value=\"\" required></option>\r\n                            \r\n                            {cards.map((cards, i) => {\r\n                                \r\n                                return (\r\n                                    <option value = {i} key = {'cartao' + i}>\r\n                                        Cartão com final  {cards.card_number.substr(-4)}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n\r\n                        </select>\r\n                        <div className=\"buttons\">\r\n                            <button className=\"button-form-payment btnx\">\r\n                                Pagar\r\n                            </button>\r\n                            <button onClick={() => setShowModal(\"none\")} className=\"buttons btnx\">\r\n                                Voltar\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"overlay\" style={{display:showModal2}}>\r\n            <div className=\"container-payment\">\r\n                <div className=\"items-payment\">\r\n                    <div className=\"sub-title-payment\">\r\n                        <div className=\"sub-title-payment1\">\r\n                            <h3>Recebido de Pagamento</h3>\r\n                        </div>\r\n                    </div><br></br>\r\n                    <h4 className=\"title-payment\">O pagamento{(cardUser == true ? \" \" : \" NÃO\"   )} foi concluido com sucesso!</h4>\r\n                    <div className=\"buttons\">\r\n                        <button onClick={() => setShowModal2(\"none\")} className=\"buttons btnx\">\r\n                                Voltar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n}\r\n\r\nexport default Modal;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from './Modal';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Modal />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}